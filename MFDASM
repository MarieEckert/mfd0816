                        MFD-0816 ASSEMBLER SPECFICIATION
                                 November  2024

CONTENTS
────────────────────────────────────────────────────────────────────────────────

  1..... RESERVED KEYWORDS & CHARACTERS
  2..... SYNTAX
  2.1... COMMENTS
  2.2... SECTIONS
  2.3... LABELS
  2.4... INSTRUCTIONS & DIRECTIVES
  2.4.1. ADDRESSING MODES
  2.5... CONSTANT EXPRESSIONS
  2.6... STRING LITERALS
  2.7... NUMBER LITERALS
  3..... SPECIAL KEYWORDS
  4..... DIRECTIVE REFERENCE
  ...... LICENSE

1. RESERVED KEYWORDS & CHARACTERS
────────────────────────────────────────────────────────────────────────────────

  Keywords:

    db  dw  dd  times  _here  section  sp  ip  fl  al  ah  acl  bl  bh  bcl  cl
    ch  ccl  dl  dh  dcl  iid  ar  addressing  relative  absolute  at

  Characters:

    [  ]  -  +  /  *  "  ;  ,

2. SYNTAX
2.1. COMMENTS
────────────────────────────────────────────────────────────────────────────────

  Comments can be made using the reserved semi-colon character, these are line
  comments. As soon as a semi-colon is met on a line, every character up until
  the end of the line is interpreted as a comment.

2.2. SECTIONS
────────────────────────────────────────────────────────────────────────────────

  Programs can be divided up into sections. Each section has a name an a
  starting address. The begin of a section is declared by the section keyword,
  followed by the section name, followed by the at keyword and finally the
  address as a literal expression.

  Example:

    section <name> at <location>

  The Section location must be a 16-bit value, the name must not be a reserved
  keyword or character.

  If instructions or data is declared before any section is declared, it should
  start at address 0. Empty space between sections must be padded with 0s, if
  the assembler is set to produce a ROM.

  Section names are to be added as identifiers usable anywhere else in the
  program.

2.3. LABELS
────────────────────────────────────────────────────────────────────────────────

  Labels are basic statements which resolve to a certain address/location in the
  program. Labels are declared by a name immediatly followed by a colon.

  Example:

    <label-name>:

  The name must not be a reserved keyword or character.

  Labels are to be added as identifiers usable anywhere else in the program.
  They should resolve to location of the last byte before its declaration plus
  one.

  Example:

                Location  Value
                0x0123     00
    some_label: 0x0124           ; some_label should now resolve to 0x0124

2.4. INSTRUCTIONS & DIRECTIVES
────────────────────────────────────────────────────────────────────────────────

  The syntax for instructions and directives is as follows:

    <instruction or directive keyword> [operand[, operand]]

  Here, the part in angle brackets is required and the parts in square brackets
  are only required for certain instructions or directives. If an operand is
  followed upon by another operand, they must be seperated by a comma.

  For a reference of instructions see the MFD-0816 INSTRUCTION SET REFERENCE,
  for directives see Chapter 4.

2.4.1. ADDRESSING MODES
────────────────────────────────────────────────────────────────────────────────

  This chapter focuses on immediate, direct and indirect addressing syntax,
  for the "addressing" directive, see Chapter 4.

  Immediate addresses/values are declared simply by notating the value without
  any decorations, e.g.:

    ld acl, 0x1234

  Loads the value 0x1234 into the ACL register.

    ld bcl, ccl

  Loads the value from the CCL register into the BCL register.

  Direct addressing is achieved by wrapping the value in square-brackets, e.g.:

    ld acl, [0x1234]

  Loads the value at address 0x1234 into the ACL register.

    ld bcl, [ccl]

  Loads the value from the address in the CCL register into the BCL register.

  Indirect addressing is done by adding another set of square-brackets around
  the value, e.g.:

    ld acl, [[0x1234]]

2.5. CONSTANT EXPRESSIONS
────────────────────────────────────────────────────────────────────────────────

LICENSE
────────────────────────────────────────────────────────────────────────────────

  MFD-0816 ASSEMBLER SPECIFICATION by Marie Eckert is licensed
  under CC BY-SA 4.0, see <https://creativecommons.org/licenses/by-sa/4.0/>
