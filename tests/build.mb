sector config
  section files
    ; Directories
    str build_root 'build/'
    str debug_dir '$(/config/files/build_root)debug/'
    str release_dir '$(/config/files/build_root)release/'
    str obj_dir 'obj/'

    ; Binaries
    str binname 'mfdasm'

    ; Source Info
    str unit_tests_src 'unit/'
    list str unit_tests
          'asm_encode',
          'mri'
    list str includes '.', '../asm', '../emu', '3rdparty/doctest'
  end

  section tools
    str cc 'clang++'
    str cflags '-fno-exceptions -std=c++20 -stdlib=libc++ -Wall -Wextra -I$(/config/files/includes)'

    str ldflags '-stdlib=libc++'
  end

  section mariebuild
    u8 default_log_level 2

    list str targets 'tests', 'build', 'run', 'format'
    str default 'tests'
  end
end

sector targets
  section mfdasm
    str exec '#!/bin/bash
              set -e
              . helpers.bash
              echo ''=== BUILDING LIBASM.A & LIBSHARED.A FROM MFDASM ===''
              echo_run "cd ../asm"
              echo_run "mb -n -t debug"
              echo ''=== BUILD COMPLETE, CREATING ARCHIVES ===''
              echo_run ''find build/debug/obj/ -type f -name *.o | grep -v main.o | xargs ar -rc libasm.a''
              echo_run "ranlib libasm.a"
              echo_run "mv libasm.a ../tests/"
              echo_run ''find build/debug/shared/ -type f -name *.o | grep -v main.o | xargs ar -rc libshared.a''
              echo_run "ranlib libshared.a"
              echo_run "mv libshared.a ../tests/"
              echo ''=== DONE ===''
    '
  end

  section mfdemu
    str exec '#!/bin/bash
              set -e
              . helpers.bash
              echo ''=== BUILDING LIBEMU.A FROM MFDEMU ===''
              echo_run "cd ../emu"
              echo_run "mb -n -t debug"
              echo ''=== BUILD COMPLETE, CREATING ARCHIVE ===''
              echo_run ''find build/debug/obj/ -type f -name *.o | grep -v main.o | xargs ar -rc libemu.a''
              echo_run "ranlib libemu.a"
              echo_run "mv libemu.a ../tests/"
              echo ''=== DONE ===''
    '
  end

  section build
    list str required_targets 'mfdasm', 'mfdemu'
    list str c_rules 'unit_compile'

    str target_objdir 'build/'
  end

  section run
    list str c_rules 'unit_run'
  end

  section tests
    list str required_targets 'build', 'run'
  end
end

sector c_rules
  section unit_compile
    str exec_mode 'singular'
    bool parallel true
    u8 max_procs 3

    str input_src '/config/files/unit_tests'

    str input_format '$(/config/files/unit_tests_src)$(%element%).cpp'
    str output_format '$(/config/files/obj_dir)unit_$(%element%)'

    str exec '#!/bin/bash
              set -e
              . helpers.bash
              echo_run "mkdir -p \$(dirname $(%output%))"
              echo_run "$(/config/tools/cc) $(/config/tools/cflags) -o $(%output%).o -c $(%input%)"
              echo_run "$(/config/tools/cc) $(/config/tools/cflags) $(%output%).o libasm.a libemu.a libshared.a -o $(%output%)"
              echo_run "rm $(%output%).o"
    '
  end

  section unit_run
    str exec_mode 'singular'
    bool parallel false

    str input_src '/config/files/unit_tests'
    str input_format '$(/config/files/obj_dir)unit_$(%element%)'
    str output_format ''

    str exec '$(%input%) --ni'
  end
end